name: cron-update

on:
  schedule:
    - cron: "0 5 * * *"

jobs:
  cron-update:
    runs-on: ubuntu-latest
    steps:   
      - name: cron-update / get latest version
        run: |
          echo "LATEST_VERSION=$(curl -s https://api.github.com/repos/Sonarr/Sonarr/releases/latest | jq -r '.tag_name' | sed 's/v//')" >> "${GITHUB_ENV}"
          git checkout HEAD

      - name: cron-update / compare latest with current version
        uses: actions/github-script@62c3794a3eb6788d9a2a72b219504732c0c9a298
        with:
          script: |
            const { existsSync, readFileSync, writeFileSync } = require('node:fs');
            const { resolve } = require('node:path');
            const latest = "${{ env.LATEST_VERSION }}";
            const repository = {dot:{}};

            try{
              const path = resolve('.json');
              if(existsSync(path)){
                try{
                  repository.dot = JSON.parse(readFileSync(path).toString());
                }catch(e){
                  throw new Error('could not parse .json');
                }
              }else{
                throw new Error('.json does not exist');
              }
            }catch(e){
              core.setFailed(e);
            }

            if(latest.match(/\d+\.\d+\.\d+\.\d+/i) && latest !== `${repository.dot.semver.version}.${repository.dot.build.args.version_build}`){
              repository.dot.semver.version = latest.split('.').slice(0,3).join('.');
              repository.dot.semver.latest = repository.dot.semver.version;
              repository.dot.build.args.version_build = latest.split('.')[3];
              try{
                writeFileSync(resolve('.json'), JSON.stringify(repository.dot));
                core.exportVariable('WORKFLOW_AUTO_UPDATE', true);
              }catch(e){
                core.setFailed(e);
              }
            }

      - name: cron-update / checkout
        id: checkout
        if: env.WORKFLOW_AUTO_UPDATE == 'true'
        run: |         
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .json
          git commit -m "[upgrade] ${{ env.LATEST_VERSION }}"
          git push origin HEAD:master

      - name: cron-update / build docker image
        if: env.WORKFLOW_AUTO_UPDATE == 'true' && steps.checkout.outcome == 'success'
        uses: the-actions-org/workflow-dispatch@3133c5d135c7dbe4be4f9793872b6ef331b53bc7
        with:
          workflow: docker.yml
          wait-for-completion: false
          token: "${{ secrets.REPOSITORY_TOKEN }}"
          inputs: '{ "release":"false", "readme":"true" }'